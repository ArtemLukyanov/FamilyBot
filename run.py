import telebot
from telebot import types
import datetime

API_TOKEN = '7444859157:AAFo2yC6vxHZ1PG5HYd3JYnlJMALFRcvsXw'
bot = telebot.TeleBot(API_TOKEN)

# –•—Ä–∞–Ω–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_states = {}
user_data = {}

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —É—Å–ª—É–≥–∞–º ‚Äî –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏—è –≤ —ç—Ç–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
service_info = {
    "dentistry": {
        "–¢–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è": "–¢–µ—Ä–∞–ø–µ–≤—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è: \n\n–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞, –ª–µ—á–µ–Ω–∏–µ –∏ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∑—É–±–æ–≤ –∏ –¥—ë—Å–µ–Ω. –û—Å–Ω–æ–≤–Ω–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ —É–¥–µ–ª—è–µ—Ç—Å—è –ª–µ—á–µ–Ω–∏—é –∫–∞—Ä–∏–µ—Å–∞, –ª–µ—á–µ–Ω–∏—é –ø—É–ª—å–ø–∏—Ç–∞, –ª–µ—á–µ–Ω–∏—é –ø–µ—Ä–∏–æ–¥–æ–Ω—Ç–∏—Ç–∞ –∏ –¥—Ä—É–≥–∏—Ö –≤–æ—Å–ø–∞–ª–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤. –ü—Ä–æ–≤–æ–¥—è—Ç—Å—è –ø—Ä–æ—Ü–µ–¥—É—Ä—ã –ø–æ —á–∏—Å—Ç–∫–µ –∑—É–±–æ–≤, —Ä–µ—Å—Ç–∞–≤—Ä–∞—Ü–∏–∏ –∑—É–±–æ–≤, –ø–ª–æ–º–±–∏—Ä–æ–≤–∞–Ω–∏—é –∑—É–±–æ–≤.",      # TODO: –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏
        "–•–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è": "–•–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è: \n\n–û–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–µ –∏ –ø–ª–∞–Ω–æ–≤–æ–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ –¥–ª—è –ª–µ—á–µ–Ω–∏—è –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –∏ –ø–∞—Ç–æ–ª–æ–≥–∏–π –∑—É–±–æ—á–µ–ª—é—Å—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã. –í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —É–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–æ–≤, –∏–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—é, –∫–æ—Ä—Ä–µ–∫—Ü–∏—é –≤—Ä–æ–∂–¥–µ–Ω–Ω—ã—Ö –∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–Ω—ã—Ö –¥–µ—Ñ–µ–∫—Ç–æ–≤, –ª–µ—á–µ–Ω–∏–µ —Ç—Ä–∞–≤–º –∏ –∏–Ω—Ñ–µ–∫—Ü–∏–π. –û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å —Ö–∏—Ä—É—Ä–≥–∏—á–µ—Å–∫–æ–π —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏ - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∏ —ç—Å—Ç–µ—Ç–∏–∫–∏ —Ä–æ—Ç–æ–≤–æ–π –ø–æ–ª–æ—Å—Ç–∏, –∞ —Ç–∞–∫–∂–µ —É–ª—É—á—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –∂–∏–∑–Ω–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞.",
        "–ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è –∑—É–±–æ–≤": "–ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è –∑—É–±–æ–≤:  \n\n–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —É—Ç—Ä–∞—á–µ–Ω–Ω—ã—Ö –∑—É–±–æ–≤, –∫–æ—Ç–æ—Ä—ã–π –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —É—Å—Ç–∞–Ω–æ–≤–∫—É –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ—Ä–Ω—è (–∏–º–ø–ª–∞–Ω—Ç–∞) –≤ —á–µ–ª—é—Å—Ç–Ω—É—é –∫–æ—Å—Ç—å. –ò–º–ø–ª–∞–Ω—Ç —Å–ª—É–∂–∏—Ç –æ—Å–Ω–æ–≤–æ–π –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∫—Ä–µ–ø–ª–µ–Ω–∏—è –∫–æ—Ä–æ–Ω–∫–∏, –º–æ—Å—Ç–æ–≤–∏–¥–Ω–æ–≥–æ –ø—Ä–æ—Ç–µ–∑–∞ –∏–ª–∏ —Å—ä—ë–º–Ω–æ–≥–æ –ø—Ä–æ—Ç–µ–∑–∞. –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏ —ç—Å—Ç–µ—Ç–∏–∫—É –∑—É–±–Ω–æ–≥–æ —Ä—è–¥–∞, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –¥–æ–ª–≥–æ–≤–µ—á–Ω–æ—Å—Ç—å –∏ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞. –ò–º–ø–ª–∞–Ω—Ç–∞—Ü–∏—è –∑—É–±–æ–≤ –ø–æ–º–æ–≥–∞–µ—Ç —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞, –≤–æ–∑–≤—Ä–∞—â–∞—è –∫–æ–º—Ñ–æ—Ä—Ç –ø—Ä–∏ –∂–µ–≤–∞–Ω–∏–∏ –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —É–ª—ã–±–∫–µ.",
        "–û—Ä—Ç–æ–ø–µ–¥–∏—á–µ—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è": "–û—Ä—Ç–æ–ø–µ–¥–∏—á–µ—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è:\n\n–û—Å–Ω–æ–≤–Ω–∞—è —Ü–µ–ª—å –æ—Ä—Ç–æ–ø–µ–¥–∏—á–µ—Å–∫–æ–π —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏ –≤ –Ø–ª—Ç–µ - –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∂–µ–≤–∞—Ç–µ–ª—å–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, —É–ª—É—á—à–µ–Ω–∏–µ —ç—Å—Ç–µ—Ç–∏–∫–∏ —É–ª—ã–±–∫–∏ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –∂–∏–∑–Ω–∏ –ø–∞—Ü–∏–µ–Ω—Ç–∞. –í–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ—Ä–æ–Ω–æ–∫, –≤–∏–Ω–∏—Ä–æ–≤, –º–æ—Å—Ç–æ–≤–∏–¥–Ω—ã—Ö –ø—Ä–æ—Ç–µ–∑–æ–≤, –∞ —Ç–∞–∫–∂–µ —Å—ä—ë–º–Ω—ã—Ö –∏ –Ω–µ—Å—ä—ë–º–Ω—ã—Ö –∑—É–±–Ω—ã—Ö –ø—Ä–æ—Ç–µ–∑–æ–≤.",
        "–û—Ä—Ç–æ–¥–æ–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è": "–û—Ä—Ç–æ–¥–æ–Ω—Ç–∏—á–µ—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è:\n\n–ì–ª–∞–≤–Ω–æ–π –∑–∞–¥–∞—á–µ–π –æ—Ä—Ç–æ–¥–æ–Ω—Ç–∏–∏ —è–≤–ª—è–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–∫—É—Å–∞ –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –∑—É–±–æ–≤ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∂–µ–≤–∞–Ω–∏—è, —Ä–µ—á–∏ –∏ —ç—Å—Ç–µ—Ç–∏–∫–∏ —É–ª—ã–±–∫–∏. –õ–µ—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±—Ä–µ–∫–µ—Ç–æ–≤, —ç–ª–∞–π–Ω–µ—Ä–æ–≤, –∫–∞–ø–ø –∏ –¥—Ä—É–≥–∏—Ö –æ—Ä—Ç–æ–¥–æ–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –∞–ø–ø–∞—Ä–∞—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥–∞—é—Ç –ø–µ—Ä–µ–º–µ—â–∞—Ç—å –∑—É–±—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ.",
        "–î–µ—Ç—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è": "–î–µ—Ç—Å–∫–∞—è —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è:\n\n–£—Ö–æ–¥ –∑–∞ –∑—É–±–∞–º–∏ –¥–µ—Ç–µ–π –æ—Ç –º–ª–∞–¥–µ–Ω—á–µ—Å—Ç–≤–∞ –¥–æ –ø–æ–¥—Ä–æ—Å—Ç–∫–æ–≤–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞. –û—Å–Ω–æ–≤–Ω–æ–π –∞–∫—Ü–µ–Ω—Ç –¥–µ—Ç—Å–∫–æ–π —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏ –ø—Ä–∏—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫—É –∏ –ª–µ—á–µ–Ω–∏–µ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π –ø–æ–ª–æ—Å—Ç–∏ —Ä—Ç–∞ —É –¥–µ—Ç–µ–π, –∞ —Ç–∞–∫–∂–µ –æ–±—É—á–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≥–∏–≥–∏–µ–Ω–µ –ø–æ–ª–æ—Å—Ç–∏ —Ä—Ç–∞. –í—Ä–∞—á–∏-—Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏, —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –≤ —ç—Ç–æ–π –æ–±–ª–∞—Å—Ç–∏, –∏–º–µ—é—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–µ—Ç—å–º–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã –≤–æ –≤—Ä–µ–º—è –≤–∏–∑–∏—Ç–æ–≤. –õ–µ—á–µ–Ω–∏–µ –º–æ–∂–µ—Ç –≤–∫–ª—é—á–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –æ—Å–º–æ—Ç—Ä—ã, –ø–ª–æ–º–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞—Ä–∏–µ—Å–∞, –≥–µ—Ä–º–µ—Ç–∏–∑–∞—Ü–∏—é —Ñ–∏—Å—Å—É—Ä –∏ –æ—Ä—Ç–æ–¥–æ–Ω—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.",
        "–†–µ–Ω—Ç–≥–µ–Ω –∑—É–±–æ–≤": "–†–µ–Ω—Ç–≥–µ–Ω –∑—É–±–æ–≤:\n\n–°–Ω–∏–º–∫–∏ –∑—É–±–æ–≤ –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º —Ç–æ–º–æ–≥—Ä–∞—Ñ–µ Sirona Orthophos XG 3D",
    },
    "cosmetology": {
        "–£–¥–∞–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–π": "",          # TODO: –¥–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏
        "–õ–∞–∑–µ—Ä–Ω–∞—è —ç–ø–∏–ª—è—Ü–∏—è": "",
        "–õ–∞–∑–µ—Ä–Ω–æ–µ –æ–º–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –æ—Ç–±–µ–ª–∏–≤–∞–Ω–∏–µ": "",
        "–ö–æ—Å–º–µ—Ü–µ–≤—Ç–∏—á–µ—Å–∫–∏–µ —É—Ö–æ–¥—ã": "",
        "–î–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –ø–∏–ª–∏–Ω–≥–∏": "",
        "–ë–µ–∑–æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π –ª–∏—Ñ—Ç–∏–Ω–≥ –Ω–∏—Ç—è–º–∏": "",
        "–ë–æ—Ç—É–ª–∏–Ω–æ—Ç–µ—Ä–∞–ø–∏—è": "",
        "–ú–µ–∑–æ—Ç–µ—Ä–∞–ø–∏—è": "",
        "–ö–æ–Ω—Ç—É—Ä–Ω–∞—è –ø–ª–∞—Å—Ç–∏–∫–∞": "",
        "–ë–∏–æ—Ä–µ–≤–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—è": "",
    }
}

# –ö–Ω–æ–ø–∫–∞ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
main_menu_button = types.InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def send_main_menu(chat_id):
    user_states[chat_id] = None
    user_data[chat_id] = {}
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton("üìÜ  –û–Ω–ª–∞–π–Ω –∑–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é ", callback_data="book"))
    markup.add(types.InlineKeyboardButton("üî•  –ê–∫—Ü–∏–∏ ", callback_data="promo"))
    markup.add(types.InlineKeyboardButton("üì≤  –°–æ—Ü—Å–µ—Ç–∏ ", callback_data="socials"))
    markup.add(types.InlineKeyboardButton("üìã  –°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥ ", callback_data="services"))
    markup.add(types.InlineKeyboardButton("‚òéÔ∏è  –ö–æ–Ω—Ç–∞–∫—Ç—ã ", callback_data="contacts"))
    bot.send_message(
        chat_id,
        "‚ù§Ô∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Family Clinic ! –ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º...\n\n–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?",
        reply_markup=markup
    )

# === –•–µ–Ω–¥–ª–µ—Ä /start ===
@bot.message_handler(commands=['start'])
def handle_start(message):
    send_main_menu(message.chat.id)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ callbackQuery ===
@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    chat_id = call.message.chat.id
    data = call.data

    # –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if data == "main_menu":
        send_main_menu(chat_id)
        return

    if data == "promo":
        markup = types.InlineKeyboardMarkup()
        markup.add(main_menu_button)
        bot.send_message(chat_id, "–î–µ–π—Å—Ç–≤—É—é—â–∏–µ –∞–∫—Ü–∏–∏: ...", reply_markup=markup)

    elif data == "socials":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("Telegram", url="https://t.me/family_clinic_pro"))
        markup.add(types.InlineKeyboardButton("–í–ö–æ–Ω—Ç–∞–∫—Ç–µ", url="https://vk.com/cosmetyalta?from=search"))
        markup.add(main_menu_button)
        bot.send_message(chat_id, "–ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –í–∞—Å –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–µ—Ç—è—Ö!", reply_markup=markup)

    elif data == "contacts":
        markup = types.InlineKeyboardMarkup()
        markup.add(main_menu_button)
        bot.send_message(
            chat_id,
            "–ö–ª–∏–Ω–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 09:00 –¥–æ 19:00\n"
            "–ê–¥—Ä–µ—Å: –≥. –Ø–ª—Ç–∞, —É–ª. –ë–æ—Ç–∫–∏–Ω—Å–∫–∞—è, 13–ê\n"
            "–¢–µ–ª–µ—Ñ–æ–Ω: üìû +7 (978) 756-50-20",
            reply_markup=markup
        )

    # === –°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥: –≤—ã–±–æ—Ä —Ä–∞–∑–¥–µ–ª–∞ ===
    elif data == "services":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("ü¶∑ –°—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏—è", callback_data="services|dentistry"))
        markup.add(types.InlineKeyboardButton("‚ú® –ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—è –∏ –¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∏—è", callback_data="services|cosmetology"))
        markup.add(main_menu_button)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª —É—Å–ª—É–≥:", reply_markup=markup)

    # === –°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥: –≤—ã–±–æ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è ===
    elif data.startswith("services|"):
        _, section = data.split("|", 1)
        items = list(service_info.get(section, {}).keys())
        if not items:
            markup = types.InlineKeyboardMarkup()
            markup.add(main_menu_button)
            bot.send_message(chat_id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ —ç—Ç–æ–º—É —Ä–∞–∑–¥–µ–ª—É –ø–æ–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.", reply_markup=markup)
            return

        markup = types.InlineKeyboardMarkup(row_width=1)
        for idx, name in enumerate(items):
            markup.add(types.InlineKeyboardButton(name, callback_data=f"service|{section}|{idx}"))
        markup.add(main_menu_button)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —É—Å–ª—É–≥—É:", reply_markup=markup)

    # === –°–ø–∏—Å–æ–∫ —É—Å–ª—É–≥: –ø–æ–∫–∞–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —É—Å–ª—É–≥–µ ===
    elif data.startswith("service|"):
        _, section, idx_str = data.split("|", 2)
        try:
            idx = int(idx_str)
            items = list(service_info.get(section, {}).items())
            name, info = items[idx]
        except (ValueError, IndexError):
            markup = types.InlineKeyboardMarkup()
            markup.add(main_menu_button)
            bot.send_message(chat_id, "–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.", reply_markup=markup)
            return

        markup = types.InlineKeyboardMarkup()
        markup.add(main_menu_button)
        if info:
            bot.send_message(chat_id, info, reply_markup=markup)
        else:
            bot.send_message(chat_id, f"–û–ø–∏—Å–∞–Ω–∏–µ —É—Å–ª—É–≥–∏ ¬´{name}¬ª –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ. –°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ.", reply_markup=markup)

    # === –ù–∞—á–∞–ª–æ –ø–æ—Ç–æ–∫–∞ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é ===
    elif data == "book":
        markup = types.InlineKeyboardMarkup()
        markup.add(types.InlineKeyboardButton("–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Ö–∏—Ä—É—Ä–≥–∞", callback_data="consult|surgeon"))
        markup.add(types.InlineKeyboardButton("–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –æ—Ä—Ç–æ–ø–µ–¥–∞", callback_data="consult|orthopedist"))
        markup.add(types.InlineKeyboardButton("–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –∫–æ—Å–º–µ—Ç–æ–ª–æ–≥–∞-–¥–µ—Ä–º–∞—Ç–æ–ª–æ–≥–∞", callback_data="consult|cosmetolog"))
        markup.add(main_menu_button)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:", reply_markup=markup)

    # –í—ã–±–æ—Ä —Ç–∏–ø–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ -> —Å–ø–∏—Å–æ–∫ –≤—Ä–∞—á–µ–π
    elif data.startswith("consult|"):
        _, typ = data.split("|", 1)
        user_data[chat_id]['consult_type'] = typ
        user_states[chat_id] = 'choosing_doctor'
        markup = types.InlineKeyboardMarkup()
        if typ in ['surgeon', 'orthopedist']:
            doctors = ["–°–µ—Ä–æ–±—è–Ω", "–ö–∞–ª—å—á—É–∫", "–§–∞—Å—Ö—É—Ç–¥–∏–Ω–æ–≤"]
        else:
            doctors = ["–ö–æ–ø—á—É–∫", "–ñ–∏–¥–∫–∏—Ö", "–ë–∏–∫–±–æ–≤–∞"]
        for doc in doctors:
            markup.add(types.InlineKeyboardButton(doc, callback_data=f"select_doc|{doc}"))
        markup.add(main_menu_button)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–∞—á–∞:", reply_markup=markup)

    # –í—ã–±–æ—Ä –≤—Ä–∞—á–∞ -> –≤—ã–±–æ—Ä –¥–∞—Ç—ã
    elif data.startswith("select_doc|"):
        _, doc = data.split("|", 1)
        user_data[chat_id]['doctor'] = doc
        user_states[chat_id] = 'choosing_date'
        markup = types.InlineKeyboardMarkup(row_width=4)
        today = datetime.date.today()
        for i in range(7):
            d = today + datetime.timedelta(days=i)
            txt = d.strftime("%d.%m.%Y")
            markup.add(types.InlineKeyboardButton(txt, callback_data=f"date|{txt}"))
        markup.add(main_menu_button)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:", reply_markup=markup)

    # –í—ã–±–æ—Ä –¥–∞—Ç—ã -> –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏
    elif data.startswith("date|"):
        _, dt = data.split("|", 1)
        user_data[chat_id]['date'] = dt
        user_states[chat_id] = 'choosing_time'
        markup = types.InlineKeyboardMarkup(row_width=4)
        for h in range(9, 19):
            t = f"{h:02d}:00"
            markup.add(types.InlineKeyboardButton(t, callback_data=f"time|{t}"))
        markup.add(main_menu_button)
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è:", reply_markup=markup)

    # –í—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–∏ -> –∑–∞–ø—Ä–æ—Å –§–ò–û
    elif data.startswith("time|"):
        _, tm = data.split("|", 1)
        user_data[chat_id]['time'] = tm
        user_states[chat_id] = 'await_name'
        markup = types.InlineKeyboardMarkup()
        markup.add(main_menu_button)
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:", reply_markup=markup)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ ===
@bot.message_handler(func=lambda m: user_states.get(m.chat.id) == 'await_name')
def handle_name(message):
    chat_id = message.chat.id
    user_data[chat_id]['name'] = message.text
    user_states[chat_id] = 'await_dob'
    markup = types.InlineKeyboardMarkup()
    markup.add(main_menu_button)
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.MM.–ì–ì–ì–ì:", reply_markup=markup)

@bot.message_handler(func=lambda m: user_states.get(m.chat.id) == 'await_dob')
def handle_dob(message):
    chat_id = message.chat.id
    user_data[chat_id]['dob'] = message.text
    user_states[chat_id] = 'await_phone'
    markup = types.InlineKeyboardMarkup()
    markup.add(main_menu_button)
    bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, +7XXXXXXXXXX):", reply_markup=markup)

@bot.message_handler(func=lambda m: user_states.get(m.chat.id) == 'await_phone')
def handle_phone(message):
    chat_id = message.chat.id
    user_data[chat_id]['phone'] = message.text

    # –§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    ct = user_data[chat_id]['consult_type']
    doc = user_data[chat_id]['doctor']
    dt = user_data[chat_id]['date']
    tm = user_data[chat_id]['time']
    markup = types.InlineKeyboardMarkup()
    markup.add(main_menu_button)
    bot.send_message(
        chat_id,
        f"–í—ã –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é {ct} {dt} –≤ {tm} –∫ –≤—Ä–∞—á—É {doc}.\n–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ Family Clinic!",
        reply_markup=markup
    )
    user_states[chat_id] = None
    user_data[chat_id].clear()

if __name__ == '__main__':
    bot.infinity_polling()
